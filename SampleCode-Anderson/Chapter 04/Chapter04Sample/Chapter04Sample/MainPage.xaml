<UserControl 
  x:Class="Chapter04Sample.MainPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:navigation="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Navigation" 
  xmlns:uriMapper="clr-namespace:System.Windows.Navigation;assembly=System.Windows.Controls.Navigation"
  xmlns:dataControls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Data.DataForm.Toolkit" 
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  mc:Ignorable="d" d:DesignWidth="640" d:DesignHeight="480">

  <Grid x:Name="LayoutRoot" Style="{StaticResource LayoutRootGridStyle}">

    <Border x:Name="ContentBorder" Style="{StaticResource ContentBorderStyle}">
        <!--Note that a Template has been specified for this Frame (which is defined in Styles.xaml)-->
        <!--to enable custom transitions between views-->
        <navigation:Frame x:Name="ContentFrame" Style="{StaticResource ContentFrameStyle}" Template="{StaticResource FrameControlTemplate}"
                          Source="Home" Navigated="ContentFrame_Navigated" NavigationFailed="ContentFrame_NavigationFailed">
            <navigation:Frame.UriMapper>
                <uriMapper:UriMapper>
                    <uriMapper:UriMapping Uri="" MappedUri="/Views/Home.xaml"/>
                      
                    <!-- Permits the product ID to be passed to a page using a custom URI -->
                    <!-- Note that it has to be *above* the generic uri mapping (below) to work -->
                    <uriMapper:UriMapping Uri="{}{pageName}/{id}" MappedUri="/Views/{pageName}.xaml?ProductID={id}"/>
                      
                    <!-- Note that this mapping has been modified slightly so leading / is not required in links -->
                    <uriMapper:UriMapping Uri="{}{pageName}" MappedUri="/Views/{pageName}.xaml"/>
                </uriMapper:UriMapper>
            </navigation:Frame.UriMapper>
        </navigation:Frame>
    </Border>

    <Grid Style="{StaticResource NavigationOuterGridStyle}">
      <Grid x:Name="NavigationGrid" Style="{StaticResource NavigationGridStyle}">

        <Border x:Name="BrandingBorder" Style="{StaticResource BrandingBorderStyle}">
          <StackPanel x:Name="BrandingStackPanel" Style="{StaticResource BrandingStackPanelStyle}">

            <ContentControl Style="{StaticResource LogoIcon}"/>
            <TextBlock x:Name="ApplicationNameTextBlock" Style="{StaticResource ApplicationNameStyle}" 
                               Text="{Binding ApplicationStrings.ApplicationName, Source={StaticResource ResourceWrapper}}"/>

          </StackPanel>
        </Border>

        <Border x:Name="LinksBorder" Style="{StaticResource LinksBorderStyle}">
          <StackPanel x:Name="LinksStackPanel" Style="{StaticResource LinksStackPanelStyle}">

            <HyperlinkButton x:Name="Link1" Style="{StaticResource LinkStyle}" 
                                     NavigateUri="Home" TargetName="ContentFrame" Content="{Binding Path=ApplicationStrings.HomePageTitle, Source={StaticResource ResourceWrapper}}"/>

            <Rectangle x:Name="Divider1" Style="{StaticResource DividerStyle}"/>

            <HyperlinkButton x:Name="Link2" Style="{StaticResource LinkStyle}" 
                                     NavigateUri="About" TargetName="ContentFrame" Content="{Binding Path=ApplicationStrings.AboutPageTitle, Source={StaticResource ResourceWrapper}}"/>

          </StackPanel>
        </Border>

      </Grid>

      <Border x:Name="loginContainer" Style="{StaticResource LoginContainerStyle}">
          <!-- LoginStatus will be added here in code behind. This is required for the designer view to work -->           
      </Border>
    </Grid>

  </Grid>

</UserControl>